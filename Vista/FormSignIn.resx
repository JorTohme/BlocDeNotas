<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonSignIn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>